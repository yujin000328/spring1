pipeline { 
  agent { 
    kubernetes { 
      yaml ''' 
apiVersion: v1 
kind: Pod 
spec: 
  containers: 
  - name: maven 
    image: maven:3-openjdk-17 
    command: 
    - sleep 
    args: 
    - infinity 
  - name: git 
    image: alpine/git 
    command: 
    - sleep 
    args: 
    - infinity 
  - name: kaniko 
    image: gcr.io/kaniko-project/executor:debug 
    command: 
    - sleep 
    args: 
    - infinity 
    volumeMounts: 
    - name: registry-credentials 
      mountPath: /kaniko/.docker 
  volumes: 
  - name: registry-credentials 
    secret: 
      secretName: regcred 
      items: 
      - key: .dockerconfigjson 
        path: config.json 
''' 
    } 
  } 
  
  stages { 
    stage('Checkout') { 
      steps { 
        container('maven') { 
          git branch: 'main', url: 'https://github.com/yujin000328/spring1.git' 
        } 
      } 
    } 
    
    stage('Build') { 
      steps { 
        container('maven') { 
          sh 'mvn clean package -DskipTests=true' 
        } 
      } 
    } 
    
    stage('Test') { 
      steps { 
        container('maven') { 
          sh 'mvn test' 
        } 
      } 
    } 
    
    stage('Build & Tag & Push Docker Image') { 
      steps { 
        container('kaniko') { 
          sh 'executor --dockerfile=Dockerfile --context=dir:///home/jenkins/agent/workspace/kube_pipeline/ --destination=yujin0328/hello:$BUILD_NUMBER --destination=yujin0328/hello:latest' 
        } 
      } 
    } 
    
    stage('Update K8s Manifests & Push') { 
      environment { 
        githubUser = 'yujin000328' 
        githubEmail = 'dammoladbwls@gmail.com' 
        githubId = 'yujin000328' 
        githubRepo = 'argo1' 
        githubURL = "https://github.com/${githubId}/${githubRepo}.git" 
        dockerhubId = 'yujin0328' 
        dockerhubRepo = 'hello' 
      } 
      
      steps { 
        container('git') { 
          git branch: 'main', credentialsId: 'github-credential', url: "${githubURL}" 
          sh "git config --global --add safe.directory ${WORKSPACE}" 
          sh "git config --global user.name '${githubUser}'" 
          sh "git config --global user.email '${githubEmail}'" 
          sh 'sed -i "s/image:.*/image: ${dockerhubId}\\/${dockerhubRepo}:${BUILD_NUMBER}/g" deployment.yaml' 
          sh 'git add deployment.yaml' 
          sh 'git commit -m "Jenkins Build Number - ${BUILD_NUMBER}"' 
          withCredentials([gitUsernamePassword(credentialsId: 'github-credential', gitToolName: 'Default')]) { 
            sh 'git push --set-upstream origin main' 
          } 
        } 
      } 
    } 
  } 
}